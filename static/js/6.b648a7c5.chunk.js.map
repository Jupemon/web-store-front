{"version":3,"sources":["Components/AddFilterButton/AddFilterButton.js","Components/Filters/Filters.js","Components/Products/Products.js"],"names":["AddFilterButton","state","input","default","visible","VisibilityToggle","e","target","classList","toggle","setState","ConfirmButton","props","addFilterButton","console","log","token","localStorage","getItem","CategoryName","fetch","method","headers","body","JSON","stringify","name","items","then","res","status","alert","json","data","className","variant","onClick","this","style","visibility","onChange","currentTarget","value","Component","Filters","addNewFilter","categories","resp","Col","md","Card","width","Body","boxShadow","map","cat","Title","item","Button","handleFilterProducts","Products","color","filter","activeFilters","includes","fil","filterProducts","push","handletheFilterProducts","type","length","filteredProducts","products","filtertheProducts","DeleteProduct","id","clickedFilter","selectedCategory","forEach","element","selected","Container","Row","key","ID","right","toggleModal","paddingTop","fontSize","Img","height","src","productid","Object","entries","i","Text"],"mappings":"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","file":"static/js/6.b648a7c5.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {Button} from 'react-bootstrap';\r\n\r\nclass AddFilterButton extends Component {\r\n    state = { \r\n        input : \"+Add\",\r\n        default : \"+Add\",\r\n        visible : false\r\n     }\r\n\r\n     componentDidMount() {\r\n         \r\n     }\r\n\r\n     VisibilityToggle = (e) => {\r\n        e.target.classList.toggle(\"active\");\r\n        this.setState({visible : !this.state.visible, input:\"+Add\"})\r\n     }\r\n\r\n     ConfirmButton = () => {\r\n        this.setState({visible: !this.state.visible, input : \"+Add\"});\r\n        if (this.props.addFilterButton) {\r\n            this.props.addFilterButton(this.state.input);\r\n        }\r\n        else {\r\n            console.log(\"added\")\r\n            const token = localStorage.getItem('token');\r\n            console.log(this.props.CategoryName)\r\n                //http://localhost:3000/\r\n            fetch(\"https://young-bayou-22235.herokuapp.com/addfilter\", {\r\n                method : 'POST',\r\n                headers: {\r\n                  'Authorization' : `Bearer ${token}`,\r\n                  'Content-Type' : 'application/json'\r\n                },\r\n                body : JSON.stringify({name : this.props.CategoryName, items : [this.state.input]})\r\n              })\r\n              .then(res => {\r\n                  if (res.status === 401) {\r\n                      alert(\"Unathorized accesss, please sign in\")\r\n                  }\r\n                  else {\r\n                    res.json()\r\n                  }\r\n                })\r\n              .then(data => {\r\n                  console.log(data)\r\n              })\r\n        }\r\n     }\r\n\r\n    render() { \r\n        return (\r\n            <div>\r\n                <div className=\"purple-button\"><Button variant=\"danger\" onClick={(e) => {this.VisibilityToggle(e)}}>{this.state.input}</Button></div>\r\n                <div style={this.state.visible ? {visibility:\"visible\"} : {visibility: \"hidden\", default: this.state.input}} className=\"add-filter\">\r\n                <div className=\"add-filter-background\">\r\n                    <Button variant=\"danger\" onClick={() => {this.ConfirmButton()}} className=\"filter-item\">Confirm</Button>\r\n                    <input  onChange={(e) => {this.setState({input : e.currentTarget.value})}} className=\"filter-input filter-item\"/>\r\n                    <Button variant=\"danger\" onClick={() => {this.setState({input : this.state.default, visible:!this.state.visible})}} className=\"filter-item\">Cancel</Button>\r\n                </div>\r\n                </div>\r\n            </div>\r\n             );\r\n    }\r\n}\r\n \r\nexport default AddFilterButton;","import React, { Component } from 'react';\r\nimport { Col, Button, Card } from 'react-bootstrap';\r\nimport { thisExpression } from '@babel/types';\r\nimport AddFilterButton from '../AddFilterButton/AddFilterButton';\r\n\r\nclass Filters extends Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            categories : []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://young-bayou-22235.herokuapp.com/getcategories')\r\n        .then(resp => resp.json())\r\n        .then(data => {\r\n            console.log(data)\r\n            this.setState({categories : data})\r\n        })\r\n    }\r\n\r\n    addNewFilter = () => {\r\n        console.log(\"filter added\")\r\n    }\r\n\r\n    render() { \r\n        return ( <div>\r\n                                            <Col md=\"4\">\r\n                                <Card style={{ width: '12rem' }}>\r\n                                <Card.Body style={{boxShadow:\"2.5px 1px 2px 1px rgba(0, 0, 0, 0.15)\"}}>\r\n\r\n                                    {this.state.categories.map(cat => {\r\n                                        return <div><Card.Title>{cat.name}</Card.Title> \r\n                                                {cat.items.map(item => {\r\n                                                    return <div className=\"purple-button\"><Button variant=\"primary\" onClick={(e) => {this.props.handleFilterProducts(e, item, cat.name)}}>{item}</Button></div>\r\n                                                })}\r\n                                                <AddFilterButton CategoryName={cat.name}/>\r\n                                        </div>\r\n                                    })}\r\n                                </Card.Body>\r\n                                </Card>\r\n                                </Col>\r\n        </div> );\r\n    }\r\n}\r\n \r\nexport default Filters;","import React, { Component } from 'react';\r\nimport './Products.css'\r\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap';\r\nimport Filters from '../Filters/Filters';\r\n\r\nclass Products extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            clickedFilter : null,\r\n            products:[],\r\n            filteredProducts : [],\r\n            activeFilters : []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.selectedCategory.length > 0) {\r\n            console.log(this.props, \"NOT SELECTED THOURGHT CATEGORIES\")\r\n        }\r\n        const products = this.props.products\r\n        products.forEach(element => {\r\n            element.selected = false;\r\n        });\r\n          this.setState({\r\n            products: this.props.products, //this is what is rendered\r\n            filteredProducts : this.props.products\r\n          });\r\n        \r\n      }\r\n\r\n      handleFilterProducts = (e, color, filter) => { // add a filter to the activefilters\r\n        console.log(color, filter);\r\n        e.target.classList.toggle(\"active\");\r\n\r\n        const activeFilters = this.state.activeFilters;\r\n        \r\n        if (activeFilters.includes(color)) { // remove a filter\r\n            this.setState({activeFilters: activeFilters.filter(fil => {\r\n                return fil !== color\r\n            })}, () => {this.filterProducts(color, filter)})\r\n        }\r\n        else { // add a filter\r\n            activeFilters.push(color);\r\n            this.setState({ activeFilters }, () => {this.filterProducts(color, filter)})\r\n        }\r\n        /*\r\n          const activeFilters = this.state.activeFilters; // //hard candy\r\n          e.target.classList.toggle(\"active\");\r\n          if (!activeFilters.includes(color)) { // if active filters doesnt contain the color push it to active filters list and call filter products\r\n            activeFilters.push(color)\r\n            this.setState({activeFilters: activeFilters}, () => {this.handletheFilterProducts(e, color, filter)})\r\n\r\n          }\r\n          else { // color is already in filters then remove it from the filter list and call filter products\r\n            this.setState({activeFilters: activeFilters.filter(fil => {\r\n                return fil !== color\r\n            })}, () => {this.handletheFilterProducts(e, color, filter)})\r\n          }\r\n          */\r\n\r\n          \r\n      }\r\n\r\n\r\n      handletheFilterProducts = (e, type, filter) => { // adds/removes the filters\r\n        if (this.state.activeFilters.length <= 0) {\r\n            this.setState({filteredProducts:this.state.products})\r\n        }\r\n        else {\r\n            const filteredProducts = this.state.filteredProducts.filter(item => {\r\n                return this.state.activeFilters.includes(item[filter])\r\n             })\r\n             console.log(filteredProducts, \"!!!\")\r\n             this.setState({ filteredProducts:filteredProducts})\r\n        }\r\n        \r\n      }\r\n\r\n      filtertheProducts = () => {\r\n          console.log(\"products filtered\");\r\n      }\r\n\r\n      DeleteProduct = (id) => { //  fetch(`http://localhost:3000/deleteproduct/${id}`\r\n          fetch(`https://young-bayou-22235.herokuapp.com/${id}`, {\r\n              method: \"post\"\r\n          })\r\n          .then(res => {\r\n              if (res.status === 400) {\r\n                  console.log(\"product deleted\")\r\n              }\r\n          })\r\n      }\r\n\r\n      //get all yellow candies, push them to the currently rendered products array\r\n    filterProducts(color, filter) { //render products based on activefilters\r\n\r\n        console.log(this.state.filteredProducts, this.state.activeFilters, \"HCEK\")\r\n\r\n        if (this.state.activeFilters.length <= 0) { // if there are no active filters, render all products\r\n            this.setState({filteredProducts : this.state.products})\r\n        }\r\n\r\n        else {\r\n            const filteredProducts = this.state.products.filter(item => { // color = hard candy / filter = Category\r\n                if (this.state.activeFilters.includes(item[filter])) { // if the active filter contains the specifc item, return it\r\n                    return item\r\n                }\r\n            })\r\n            this.setState({filteredProducts : filteredProducts})\r\n        }\r\n        /*\r\n        else {\r\n            const filteredProducts = this.state.products.filter(item => { // color = hard candy / filter = Category\r\n                Object.values(item).filter(value => {\r\n                    return value === this.state.activeFilters\r\n                })\r\n                console.log(Object.values(item).filter(value => {this.state.activeFilters.includes(value)}), \"WHAT IS THIS?\")\r\n                if (this.state.activeFilters.includes(item[filter])) { // if the active filter contains the specifc item, return it\r\n                    console.log(item, \"filtered\")\r\n                    return item\r\n                }\r\n                else {\r\n                    //console.log(item, filter, \"why you no work?\")\r\n                }\r\n            })\r\n            this.setState({filteredProducts : filteredProducts})\r\n        }\r\n        */\r\n        /*\r\n        const filt = this.state.filteredProducts.filter((item) => {\r\n            if (item[filter] === color) {\r\n                return item\r\n            }\r\n            return null;\r\n        })\r\n        this.setState({filteredProducts: filt})\r\n        */\r\n        /*\r\n        if (this.state.activeFilters.length <= 0) { // if there are no active filters, render all products\r\n            this.setState({filteredProducts : this.state.products})\r\n        }\r\n        else {\r\n            const filteredProducts = this.state.products.filter(item => { // color = hard candy / filter = Category\r\n                if (this.state.activeFilters.includes(item[filter])) { // if the active filter contains the specifc item, return it\r\n                    console.log(item, \"filtered\")\r\n                    return item\r\n                }\r\n                else {\r\n                    //console.log(item, filter, \"why you no work?\")\r\n                }\r\n            })\r\n            this.setState({filteredProducts : filteredProducts})\r\n        }\r\n\r\n        console.log(this.state.activeFilters, \"ACTIVE FILTERS HERE\");\r\n        this.setState({filteredProducts : this.state.products.filter((item) => { // only return items that have the filter\r\n            return this.state.activeFilters.includes(item[filter]) //\r\n        }, console.log(this.state.filteredProducts, \"FILTERED HERE\"))})\r\n        */\r\n\r\n\r\n      }\r\n            render(){\r\n                return (\r\n                        <div>\r\n                        {console.log(this.state.filteredProducts, this.props.products)}\r\n                        <Container>\r\n                            <Row>\r\n                            <Filters handleFilterProducts={this.handleFilterProducts}/>\r\n                                <Col md=\"8\">\r\n                                <div className=\"products-holder\">\r\n                                <div className=\"products-holder-holder\">\r\n                                {this.state.filteredProducts.map(item =>\r\n                                <Card style={{ width: '12rem' }} key={item.ID}>\r\n                                <div className={`outer`}>\r\n                                <div style={{right:\"0px\"}} className=\"overlay\" onClick={ ()=> this.props.toggleModal(\"deleteproduct\", item)}>\r\n                                <i style={{paddingTop:\"50px\", color:\"white\"}} className=\"fas fa-trash-alt fa-4x\"><p style={{fontSize:\"15px\"}}>Delete</p></i>\r\n                                </div>\r\n                                <div className=\"overlay\" onClick={()=> this.props.toggleModal(\"changeproduct\", item)}>\r\n                                <i style={{paddingTop:\"50px\", color:\"white\"}} className=\"fas fa-file-invoice fa-4x\"><p style={{fontSize:\"15px\"}}>Change Data</p></i>\r\n                                </div>\r\n                                <Card.Img variant=\"top\" style={{width:\"190px\", height:\"190px\"}} src={`https://young-bayou-22235.herokuapp.com/image/${item.productid}`}/>\r\n                                </div>\r\n                                <Card.Title>{item.name}</Card.Title>\r\n                                {Object.entries(item).map(i => {\r\n                                    if (i[0]!== \"selected\") {\r\n                                        return <Card.Text>{i[0] + \" : \" +i[1]}</Card.Text>\r\n                                    }\r\n                                    \r\n                                })}\r\n                                </Card>)}\r\n                                </div>\r\n                                </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </div> );\r\n                \r\n            }\r\n    \r\n}\r\n \r\nexport default Products;"],"sourceRoot":""}